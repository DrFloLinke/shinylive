[{"name":"app.R","content":"# app.R — ShinyLive-ready CI visualizer (fixed x-axis, n ≤ 150)\nlibrary(shiny)\nlibrary(bslib)\n\n# --- Tokens ---\nLIGHT_BLUE <- \"#767da2\"  # inputs + slider + borders\nLIGHT_GREY <- \"#d1d4e0\"  # CI endpoints (replaces blue)\nORANGE     <- \"#cd6118\"  # Mean (accent)\n\n# Theme (no font_google; set fonts via CSS variables)\ndark_theme <- bs_theme(\n  version   = 5,\n  bg        = \"#1d1f2b\",\n  fg        = \"#e1e2ea\",\n  primary   = ORANGE,\n  secondary = \"#5a5f80\"\n) |>\n  bs_add_rules(\"\n    :root{\n      --bs-body-font-family: 'Lexend', system-ui, -apple-system, Segoe UI, Roboto, 'Helvetica Neue', Arial, sans-serif;\n      --bs-font-monospace: 'Recursive', ui-monospace, SFMono-Regular, Menlo, Consolas, 'Liberation Mono', monospace;\n    }\n  \") |>\n  bs_add_rules(paste0(\"\n    .container-fluid { max-width: 1100px; }\n    .shiny-input-container { margin-bottom: 10px; }\n\n    .container-fluid{\n      padding-top: 16px;\n      padding-top: calc(16px + env(safe-area-inset-top));\n      padding-bottom: 22px;\n      padding-bottom: calc(22px + env(safe-area-inset-bottom));\n    }\n\n    .no-stack { display: flex; gap: 16px; align-items: flex-start; }\n    .no-stack .left  { flex: 0 0 320px; min-width: 260px; }\n    .no-stack .right { flex: 1 1 auto; min-width: 0; }\n\n    .no-stack .left .shiny-input-container .control-label { margin-top: 16px; }\n    .no-stack .left .shiny-input-container:first-of-type .control-label { margin-top: 50px; }\n    .no-stack .left .sidebar-title { margin-top: 16px; font-weight: 600; }\n\n    .legend-dot {\n      display:inline-block; width:14px; height:14px; border-radius:50%;\n      margin-right:6px; vertical-align:middle; border:1px solid #adbdd1;\n    }\n    .legend-item { margin-bottom: 6px; }\n\n    #stats { font-size: 16px; font-weight: 500; line-height: 1.35;\n             margin-top: 0px; padding-top: 0px; overflow-wrap: anywhere; }\n\n    #plotBox{\n      background: var(--bs-body-bg) !important;\n      border: 1.5px solid \", LIGHT_BLUE, \" !important;\n      padding: 12px;\n      border-radius: .6rem;\n      box-shadow: none;\n      margin-top: 15px;\n      margin-bottom: 0;\n      padding-bottom: 18px;\n    }\n\n    .form-control, .form-select, .selectize-input{\n      background-color: \", LIGHT_BLUE, \" !important;\n      color: var(--bs-body-color) !important;\n      border: 1px solid \", LIGHT_BLUE, \" !important;\n      box-shadow: none !important;\n    }\n    .form-control:focus, .form-select:focus, .selectize-input.focus{\n      border-color: \", ORANGE, \" !important;\n      outline: 0 !important;\n      box-shadow: 0 0 0 .15rem rgba(205,97,24,.35) !important;\n    }\n    .selectize-dropdown, .selectize-dropdown .active{\n      background: #44496f !important;\n      color: var(--bs-body-color) !important;\n      border-color: #5a5f80 !important;\n    }\n\n    .irs--shiny .irs-single, .irs--shiny .irs-from, .irs--shiny .irs-to,\n    .irs--shiny .irs-min, .irs--shiny .irs-max { font-size: 13px; font-weight: 600; }\n    .irs--shiny .irs-grid, .irs--shiny .irs-grid-text,\n    .irs--shiny .irs-grid-pol, .irs--shiny .irs-grid-pol.small { display: none !important; }\n    .irs--shiny.irs-with-grid { height: 44px; }\n\n    .irs--shiny .irs-bar, .irs--shiny .irs-handle>i:first-child, .irs--shiny .irs-handle{\n      background: \", LIGHT_BLUE, \" !important; border-color: \", LIGHT_BLUE, \" !important;\n    }\n    .irs--shiny .irs-line, .irs--shiny .irs-bar-edge{\n      background: #5a5f80 !important; border-color: #5a5f80 !important;\n    }\n    .irs--shiny .irs-single, .irs--shiny .irs-from, .irs--shiny .irs-to,\n    .irs--shiny .irs-min, .irs--shiny .irs-max { color: var(--bs-body-color) !important; }\n\n    @media (max-width: 576px){\n      .no-stack{ flex-direction: column; gap: 12px; }\n      .no-stack .left, .no-stack .right{ flex: 1 1 100%; min-width: 0; }\n      .container-fluid{ padding-left: 12px; padding-right: 12px; }\n      .no-stack .left .shiny-input-container .control-label { margin-top: 12px; }\n      .no-stack .left .shiny-input-container:first-of-type .control-label { margin-top: 8px; }\n    }\n  \"))\n\ndark_theme <- dark_theme |>\n  bs_add_rules(paste0(\"\n    /* Hover cue for Selectize (closed control) */\n    .selectize-control.single .selectize-input:hover{\n      border-color: \", ORANGE, \" !important;\n      box-shadow: 0 0 0 .12rem rgba(205,97,24,.35) !important;\n      filter: brightness(1.06);\n      cursor: pointer;\n    }\n    /* Hover/active option inside the opened dropdown */\n    .selectize-dropdown [data-selectable].option:hover,\n    .selectize-dropdown .option.active{\n      background: #5a5f80 !important;\n      color: var(--bs-body-color) !important;\n    }\n  \"))\n\n\nui <- page_fluid(\n  theme = dark_theme,\n  tags$head(\n    # Google Fonts (browser loads; no R downloads)\n    tags$link(rel = \"preconnect\", href = \"https://fonts.googleapis.com\"),\n    tags$link(rel = \"preconnect\", href = \"https://fonts.gstatic.com\", crossorigin = \"anonymous\"),\n    tags$link(\n      href = \"https://fonts.googleapis.com/css2?family=Lexend:wght@300;400;500&family=Recursive:wght,MONO@400,1&display=swap\",\n      rel  = \"stylesheet\"\n    ),\n    # iFrame Resizer (safe when embedded)\n    tags$script(src = \"https://cdn.jsdelivr.net/npm/iframe-resizer/js/iframeResizer.contentWindow.min.js\"),\n    tags$script(HTML(\"\n      document.addEventListener('shiny:idle', function(){\n        if (window.parentIFrame && window.parentIFrame.size) window.parentIFrame.size();\n      });\n    \"))\n  ),\n  \n  # --- Plot container + “no-moat” helpers (same as crosstab) ---\n  tags$head(\n    tags$style(HTML(\"#ciPlot img{display:block;width:100%;height:auto!important;}\")),\n    tags$script(HTML(\"\n      (function () {\n        function send() {\n          if (!window.Shiny) return;\n          Shiny.setInputValue('vh_px', window.innerHeight, {priority:'event'});\n          Shiny.setInputValue('resizeTick', Date.now(),     {priority:'event'});\n        }\n        window.addEventListener('load', send, {once:true});\n        document.addEventListener('shiny:connected', send);\n        window.addEventListener('resize', send);\n        window.addEventListener('orientationchange', send);\n      })();\n    \")),\n    tags$script(HTML(\"\n      Shiny.addCustomMessageHandler('setCiHeight', function(px){\n        var el = document.getElementById('ciPlot');\n        if (el) el.style.height = String(px) + 'px';\n      });\n    \"))\n  ),\n  \n  div(id = \"ifr-root\", `data-iframe-height` = \"true\", class = \"no-stack\",\n      # LEFT controls\n      div(class = \"left\",\n          sliderInput(\"n_raw\", \"Sample size n\", min = 3, max = 50, value = 5, step = 1, ticks = FALSE),\n          sliderInput(\"sd\", \"Sample standard deviation s\", min = 0.1, max = 1.0, value = 0.9, step = 0.1, ticks = FALSE),\n          selectInput(\"level\", \"Confidence level\",\n                      choices = c(\"80%\"=0.80,\"90%\"=0.90,\"95%\"=0.95,\"99%\"=0.99),\n                      selected = 0.95),\n          div(class = \"sidebar-title\", \"Colour key\"),\n          div(class = \"legend-item\", span(class=\"legend-dot\", style=paste0(\"background-color:\", ORANGE, \";\")),     \"Mean (assumed 0)\"),\n          div(class = \"legend-item\", span(class=\"legend-dot\", style=paste0(\"background-color:\", LIGHT_GREY, \";\")), \"CI endpoints\"),\n          br(),\n          actionButton(\"reset\", \"Reset to n=5, s=0.9, 95%\", class = \"btn btn-secondary\")\n      ),\n      \n      # RIGHT plot + footer\n      div(class = \"right\",\n          div(id = \"plotBox\",\n              plotOutput(\"ciPlot\"),\n              br(),\n              div(id = \"stats\", textOutput(\"stats\"))\n          )\n      )\n  )\n)\n\nserver <- function(input, output, session) {\n  \n  observeEvent(input$reset, {\n    updateSliderInput(session, \"n_raw\", value = 5)\n    updateSliderInput(session, \"sd\",    value = 0.9)\n    updateSelectInput(session, \"level\", selected = 0.95)\n  })\n  \n  # ---- plot height (same pattern as crosstab) ----\n  plotHeight <- reactive({\n    w <- session$clientData$output_ciPlot_width\n    if (is.null(w) || !is.finite(w) || w <= 0) w <- 360\n    compact  <- (w < 520)\n    h_from_w <- if (compact) max(240, 0.44 * w) else max(260, min(520, 0.60 * w))\n    \n    vh <- input$vh_px\n    if (is.numeric(vh) && is.finite(vh) && vh > 0) {\n      cap <- if (compact) 0.46 * vh else 0.52 * vh\n      h_from_w <- min(h_from_w, cap)\n    }\n    round(h_from_w)\n  })\n  \n  observeEvent(list(plotHeight(), input$resizeTick), {\n    session$sendCustomMessage('setCiHeight', plotHeight())\n  }, ignoreInit = FALSE)\n  \n  output$ciPlot <- renderPlot({\n    n  <- as.integer(input$n_raw)\n    s  <- input$sd\n    cl <- as.numeric(input$level)\n    \n    df    <- max(n - 1, 1L)\n    se    <- s / sqrt(n)\n    alpha <- 1 - cl\n    tcrit <- qt(1 - alpha/2, df)\n    ci    <- tcrit * se\n    m     <- 0\n    \n    # --- FIXED x-axis (so interval width changes are obvious) ---\n    x_min <- -5; x_max <- 5\n    xs <- seq(x_min, x_max, length.out = 1600)\n    ys <- dt((xs - m)/se, df) / se\n    yM <- suppressWarnings(max(ys, na.rm = TRUE)); if (!is.finite(yM) || yM <= 0) yM <- 1e-6\n    \n    # Use container width only (robust on iOS first render)\n    wcd   <- session$clientData$output_ciPlot_width\n    w_use <- if (is.null(wcd) || !is.finite(wcd) || wcd <= 0) 360 else wcd\n    tiny  <- (w_use < 420)\n    \n    op <- par(no.readonly = TRUE); on.exit(par(op), add = TRUE)\n    par(\n      fg = \"#e1e2ea\", col.axis = \"#e1e2ea\", col.lab = \"#e1e2ea\", col = \"#e1e2ea\",\n      mar  = if (tiny) c(3.0, 3.2, 1.8, 0.8) else c(4.6, 4.6, 3.0, 1.2),\n      mgp  = if (tiny) c(1.9, 0.5, 0)        else c(2.5, 0.8, 0),\n      xaxs = if (tiny) \"i\" else \"r\",\n      yaxs = if (tiny) \"i\" else \"r\",\n      cex.axis = if (tiny) 0.90 else 1.00,\n      cex.lab  = if (tiny) 0.95 else 1.05,\n      tck  = -0.015\n    )\n    \n    plot(xs, ys, type = \"n\",\n         xlab = \"\", ylab = \"Density\",\n         xlim = c(x_min, x_max),\n         ylim = c(0, yM * (if (tiny) 1.06 else 1.14)),\n         xaxt = \"n\", yaxt = \"s\")\n    axis(1, col = NA, col.ticks = \"#e1e2ea\", lwd = 0, lwd.ticks = 1)\n    lines(xs, ys, lwd = 2, col = \"#e1e2ea\")\n    \n    # Guides\n    abline(v = m,      col = ORANGE,     lwd = 2)   # Mean\n    abline(v = m - ci, col = LIGHT_GREY, lwd = 2)   # CI endpoints\n    abline(v = m + ci, col = LIGHT_GREY, lwd = 2)\n    \n    # Labels (clamped to the fixed x-range so they don't go off-canvas)\n    clamp <- function(z, lo = x_min, hi = x_max) pmin(hi, pmax(lo, z))\n    usr   <- par(\"usr\")\n    y_lab <- usr[4] - (if (tiny) 0.07 else 0.09) * diff(usr[3:4])\n    text(clamp(m),       y_lab, \"Mean\",     col = ORANGE,     cex = if (tiny) 0.85 else 0.95)\n    text(clamp(m - ci),  y_lab, \"Lower CI\", col = LIGHT_GREY, cex = if (tiny) 0.85 else 0.95)\n    text(clamp(m + ci),  y_lab, \"Upper CI\", col = LIGHT_GREY, cex = if (tiny) 0.85 else 0.95)\n  },\n  width  = function() {\n    w <- session$clientData$output_ciPlot_width\n    if (is.null(w) || !is.finite(w) || w <= 0) w <- 360\n    round(max(280, min(1100, w)))\n  },\n  height = function() plotHeight(),\n  res = 96, execOnResize = TRUE, bg = \"transparent\")\n  \n  output$stats <- renderText({\n    n  <- as.integer(input$n_raw)\n    s  <- input$sd\n    cl <- as.numeric(input$level)\n    df <- max(n - 1, 1L)\n    se <- s / sqrt(n)\n    alpha <- 1 - cl\n    tcrit <- qt(1 - alpha/2, df)\n    ci    <- tcrit * se\n    sprintf(\n      'n = %d   |   s = %.2f   |   df = %d   |   SE = %.3f   |   t* = %.3f   |   CI half-width = %.3f   |   FULL width = %.3f',\n      n, s, df, se, tcrit, ci, 2*ci\n    )\n  })\n}\n\nshinyApp(ui, server)\n","type":"text"},{"name":"Shiny Upload.R","content":"\n# 1. Install and load rsconnect\ninstall.packages(\"rsconnect\")\nlibrary(rsconnect)\n\n# 2. Connect R to my shinyapps.io account\n# Run this once on your machine (you can find the info in your shinyapps.io dashboard under Tokens):\n\nrsconnect::setAccountInfo(name='drflorianreiche',\n                          token='B18DD6C3B257DBDB66154A0808E81DDC',\n                          secret='q6XwNl4ha6DchuHWAcH6/MKCA1XbYs606zWdl9NB')\n\n# 3. Prepare your Shiny app\n\nshiny::runApp(\"~/Dropbox/AQDR/shiny/shiny_confidence interval\")\n\n# 4. Deploy / update the app\n\nrsconnect::deployApp(\"~/Dropbox/AQDR/shiny/shiny_confidence interval\")\n\n","type":"text"}]
